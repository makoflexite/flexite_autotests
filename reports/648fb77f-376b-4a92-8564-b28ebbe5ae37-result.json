{"name": "test_ordinary_user_can_login_to_web_with_eng_lang", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchFrameException: Message: Unable to locate frame: 10", "trace": "browser = <splinter.driver.webdriver.firefox.WebDriver object at 0x0508CB38>, screenshot_on_failure = None\n\n    @allure.feature('Login page tests')\n    def test_ordinary_user_can_login_to_web_with_eng_lang(browser, screenshot_on_failure):\n        page = WebLoginPage(browser)\n        page.input_login_password()\n        page.choose_english_lang()\n        time.sleep(2) #! think of how to avoid time.sleep() function. Need to add explicit wait somewhere.\n        page.press_login_btn()\n        page1 = FullWebPage(browser)\n        page1.should_be_web_loaded_with_left_menu()\n        page1.should_be_correct_username()\n        page1.should_be_english_strings()\n        # time.sleep(3)\n        page1.go_to_settings()\n        page2 = FullWebPage(browser)\n>       page2.should_be_english_language_in_settings()\n\ntest_login_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\full_web_page.py:48: in should_be_english_language_in_settings\n    with self.browser.get_iframe(10) as iframe:\n..\\..\\appdata\\local\\programs\\python\\python38-32\\lib\\contextlib.py:113: in __enter__\n    return next(self.gen)\n..\\..\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\splinter\\driver\\webdriver\\__init__.py:487: in get_iframe\n    self.driver.switch_to.frame(frame_reference)\n..\\..\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:89: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {'id': frame_reference})\n..\\..\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x052D1340>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such frame\",\"message\":\"Unable to locate frame: 10\",\"stacktrace\":\"WebDr...rror@chrome://marionette/content/error.js:398:5\\\\nswitchToFrame@chrome://marionette/content/listener.js:1649:15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchFrameException: Message: Unable to locate frame: 10\n\n..\\..\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchFrameException"}, "steps": [{"name": "input_login_password", "status": "passed", "start": 1597908498327, "stop": 1597908499711}, {"name": "choose_english_lang", "status": "passed", "start": 1597908499711, "stop": 1597908500301}, {"name": "press_login_btn", "status": "passed", "start": 1597908502302, "stop": 1597908503241}, {"name": "should_be_web_loaded_with_left_menu", "status": "passed", "start": 1597908503241, "stop": 1597908503762}, {"name": "should_be_correct_username", "status": "passed", "start": 1597908503763, "stop": 1597908503806}, {"name": "should_be_english_strings", "status": "passed", "start": 1597908503806, "stop": 1597908503865}, {"name": "go_to_settings", "status": "passed", "start": 1597908503865, "stop": 1597908504198}, {"name": "should_be_english_language_in_settings", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchFrameException: Message: Unable to locate frame: 10\n\n", "trace": "  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\m.kononova\\environments\\flexite_autotests\\pages\\full_web_page.py\", line 48, in should_be_english_language_in_settings\n    with self.browser.get_iframe(10) as iframe:\n  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\contextlib.py\", line 113, in __enter__\n    return next(self.gen)\n  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\splinter\\driver\\webdriver\\__init__.py\", line 487, in get_iframe\n    self.driver.switch_to.frame(frame_reference)\n  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py\", line 89, in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {'id': frame_reference})\n  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\m.kononova\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1597908504198, "stop": 1597908504257}], "start": 1597908498327, "stop": 1597908504362, "uuid": "16694349-c9cb-4f2a-ba94-9a350d1d7fe7", "historyId": "74dcf7a7839d64eae7e481a1efcd58aa", "testCaseId": "b3fcf9a7b541b590274b8c32b5629971", "fullName": "test_login_page#test_ordinary_user_can_login_to_web_with_eng_lang", "labels": [{"name": "feature", "value": "Login page tests"}, {"name": "suite", "value": "test_login_page"}, {"name": "host", "value": "ws-kononova"}, {"name": "thread", "value": "21820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login_page"}]}